---
import Container from "@components/container.astro";
import Link from "@components/ui/link.astro";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import { Head, Title } from 'solid-js/web';
import { onCleanup } from 'solid-js';

function getInitialMode() {
  const storedMode = localStorage.getItem('darkMode');
  return storedMode ? JSON.parse(storedMode) : false;
}

const menuitems = [
  {
    title: "Características",
    path: "#",
    children: [
      { title: "Action", path: "/" },
      { title: "Another action", path: "#" },
      { title: "Dropdown Submenu", path: "#" },
      { title: "404 Page", path: "/404" },
    ],
  },
  {
    title: "Ventas",
    path: "/pricing",
  },
  {
    title: "Sobre Mi",
    path: "/about",
  },
  {
    title: "Blog",
    path: "/blog",
  },
  {
    title: "Contacto",
    path: "/contact",
  }
];
---

<Container>
  <header class="flex flex-col lg:flex-row justify-between items-center my-5">
    <Astronav>
      <div class="flex w-full lg:w-auto items-center justify-between">
        <a href="/" class="text-lg"
          ><span class="font-bold text-slate-600">Brad</span><span class="text-blue-200">-</span><span
            class="text-blue-400">Web</span>
        </a>
        <div class="block lg:hidden">
          <MenuIcon class="w-4 h-4 text-gray-800" />
        </div>
      </div>
      <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
        <ul class="flex flex-col lg:flex-row lg:gap-3">
          {
            menuitems.map((item, index) => (
              <>
                {item.children && (
                  <Dropdown
                    title={item.title}
                    children={item.children}
                    lastItem={index === menuitems.length - 1}
                  />
                )}

                {!item.children && (
                  <li>
                    <a
                      href={item.path}
                      class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-slate-300">
                      <span> {item.title}</span>
                      {item.badge && (
                        <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">
                          New
                        </span>
                      )}
                    </a>
                  </li>
                )}
              </>
            ))
          }
        </ul>
        <div class="lg:hidden flex items-center mt-3 gap-4">
          <Link href="#" style="muted" block size="md">Iniciar Sesión</Link>
          <Link href="#" size="md" block>Registrarte</Link>
        </div>
      </MenuItems>
    </Astronav>
    <div>
      <div class="hidden lg:flex items-center gap-4">
        <a href="#">Iniciar Sesión</a>
        <Link href="#" size="md">Registrarte</Link>
      </div>
    </div>
    <style>
      
      body.light-mode {
        background-color: #fff;
        color: #000;
        
      }
  
      
      body.dark-mode {
        background-color: #121212;
        color: #fff;
      }
  
      
      body {
        transition: background-color 0.5s ease, color 0.5s ease;
      }
  
      /* Estilo para el SVG de la luna */
      .moon-svg {
        fill: #fee140;
        width: 35px;
        height: 35px;
        transition: fill 0.5s ease;
      }
    </style>
    <div>
        <button id="toggleModeButton">
          <svg
          class="moon-svg" id="dark_mode" viewBox="0 0 55 55" xmlns="http://www.w3.org/2000/svg">
            <path class="moon" d="M 27.5 0 C 34.791 0 41.79 2.899 46.945 8.055 C 52.101 13.21 55 20.209 55 27.5 C 55 34.791 52.101 41.79 46.945 46.945 C 41.79 52.101 34.791 55 27.5 55 C 20.209 55 13.21 52.101 8.055 46.945 C 2.899 41.79 0 34.791 0 27.5 C 0 20.209 2.899 13.21 8.055 8.055 C 13.21 2.899 20.209 0 27.5 0 Z" />
          </svg>
        </button>

        <script setup>
          
          const body = document.body;
          const toggleButton = document.getElementById('toggleModeButton');
          const moonSvg = document.querySelector('.moon-svg');
      
          
          function getInitialMode() {
            const storedMode = localStorage.getItem('darkMode');
            return storedMode ? JSON.parse(storedMode) : false;
          }
      
          
          function saveModeToStorage(mode) {
            localStorage.setItem('darkMode', JSON.stringify(mode));
          }
      
         
          toggleButton.addEventListener('click', function () {
            
            body.classList.toggle('light-mode');
            body.classList.toggle('dark-mode');
      
            
            moonSvg.classList.toggle('moon-light');
      
            
            saveModeToStorage(body.classList.contains('dark-mode'));
          });
      
          
          onCleanup(() => {
            toggleButton.removeEventListener('click');
          });
        </script>
    </div>
  </header>
</Container>
